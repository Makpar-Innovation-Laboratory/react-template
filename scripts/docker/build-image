#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME='build-image'
nl=$'\n'
tab='     '
SCRIPT_DES="Options: ${nl}${tab}--help/-h : Print This Help Message ${nl}\
${tab}--detached/-d : Start Container In Background"

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        --proxy)
            PROXY="true"
            shift
            ;;  
        --detached)
            DETACHED="true"
            shift
            ;;
        --help)
            help "$SCRIPT_DES" "$SCRIPT_NAME"
            exit 0
            ;;
        *)
            log "Input not understood. See \e[3m--help\e[0m for information on using this command."
            exit 1
            ;;
    esac
done


if [ "${PROXY,,}" == "true" ]
then
    log "Configuring \e[3m$CONTAINER_NAME\e[0m With Upstream Server at \e[3m$PROXY_HOST:$PROXY_PORT\e[0m" $SCRIPT_NAME
    cp "$CONF_DIR/nginx.proxy.conf" "$CONF_DIR/nginx.conf"
else
    log "Configuring \e[3m$CONTAINER_NAME\e[0m In Standalone Mode" $SCRIPT_NAME
    cp "$CONF_DIR/nginx.standalone.conf" "$CONF_DIR/nginx.conf"
fi

log "Checking If \e[3m$CONTAINER_NAME\e[0m Container Is Currently Running" $SCRIPT_NAME
if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]
then
    log "Stopping \e[3m$CONTAINER_NAME\e[0m Container" $SCRIPT_NAME
    docker container stop $CONTAINER_NAME

    log "Removing \e[3m$CONTAINER_NAME\e[0m Container" $SCRIPT_NAME
    docker rm $CONTAINER_NAME
fi

log "Building \e[3m$IMAGE_NAME:$IMAGE_TAG\e[0m Image" $SCRIPT_NAME
docker build -t $IMAGE_NAME:$IMAGE_TAG $ROOT_DIR

if [ "${DETACHED}" == "true" ]
then
    log "Starting Up Container \e[3m$CONTAINER_NAME\e[0m In Detached Mode" $SCRIPT_NAME
    docker run --detached \ 
                --name $CONTAINER_NAME \ 
                --publish $NGINX_PORT:$NGINX_PORT \ 
                --env-file $ENV_DIR/.env \ 
                $IMAGE_NAME:$IMAGE_TAG
else

    log "Starting Up Container \e[3m$CONTAINER_NAME\e[0m In Foreground" $SCRIPT_NAME
    docker run --name $CONTAINER_NAME \ 
                --publish $NGINX_PORT:$NGINX_PORT \ 
                --env-file $ENV_DIR/.env \ 
                $IMAGE_NAME:$IMAGE_TAG
fi