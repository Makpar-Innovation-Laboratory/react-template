version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
      python: 3.9
    commands:
      - cd frontend
      - npm install
      - |
        pip install behave==1.2.6 \
                    behave-html-formatter==0.9.8 \
                    requests==2.26.0 \
                    selenium==4.0.0 \
                    git-remote-codecommit==1.15.1
      # Download sonar scanner
      - |
        curl https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip \
            -o "sonar_scanner.zip"
        unzip sonar_scanner.zip > /dev/null 2>&1
        export PATH=$(pwd)/sonar-scanner-4.6.2.2472-linux/bin/:$PATH
  
  pre_build:
    commands:
      # SonarQube Static Code Analysis
      - |
        sonar-scanner \
          -Dsonar.projectKey=${APPLICATION}-frontend \
          -Dsonar.sources=. \
          -Dsonar.host.url=http://$SONAR_URL:9000 \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.log.level=DEBUG \
          -Dsonar.sources=$(pwd)/src \
          -Dsonar.sourceEncoding=UTF-8
      # -Dsonar.coverageReportPaths=path/to/coverage.xml
      # see: https://docs.sonarqube.org/latest/analysis/coverage/

      
  build:
    commands:
      - npm run build
      - |
        if [ "${BRANCH}" != prod ]
        then
          ENV="${BRANCH}-"
        else
          ENV=""
        fi
      - aws s3 cp ./build/. s3://${APPLICATION}-frontend-${ENV}deployment --recursive
  
  post_build:
    commands:
      # BDD Tests
      - |
        bash -c '
          git clone codecommit://${APPLICATION}-test-harness
          cd ${APPLICATION}-test-harness/python
          if [ "${BRANCH}" == "prod" ] 
          then
              export ENV=""
          else
            export ENV="-${BRANCH}"
          fi
          export FRONTEND_HOST_URL=https://${SUBDOMAIN}${ENV}.${DOMAIN}
          chmod +x ./configure && ./configure
          behave -t "@Web" \
                --no-skipped \
                --summary \
                --outfile behave-report-frontend.html \
                --format behave_html_formatter:HTMLFormatter \
                  || true
          aws s3 cp ./behave-report-frontend.html \
                    s3://${APPLICATION}-coverage${ENV}/test-coverage/bdd/behave-report-frontend.html
        '
      # TODO: Generate docs
      # Invalidate Frontend & Coverage Distribution Cache
      - |
        aws cloudfront create-invalidation \
            --distribution-id $COVERAGE_DISTRIBUTION_ID \
            --paths "/*"
        aws cloudfront create-invalidation \
              --distribution-id $FRONTEND_DISTRIBUTION_ID \
              --paths "/*"
artifacts:
  files:
    - frontend/build/**

cache:
  path:
    - frontend/node_modules